From 72eced47add831229198f0fd2709444cb6002ce4 Mon Sep 17 00:00:00 2001
From: Pranav Kapoor <pranavkapoor001@gmail.com>
Date: Fri, 22 Jan 2021 15:16:05 +0530
Subject: [PATCH] X00T: Update tfa98xx audio patch for R

Signed-off-by: Pranav Kapoor <pranavkapoor001@gmail.com>
---
 hal/Android.mk |   5 ++
 hal/audio_hw.c | 138 +++++++++++++++++++++++++++++++++++++++++++++++++
 hal/audio_hw.h |   4 ++
 3 files changed, 147 insertions(+)

diff --git a/hal/Android.mk b/hal/Android.mk
index e2c685ae1..6981cb16f 100644
--- a/hal/Android.mk
+++ b/hal/Android.mk
@@ -373,6 +373,11 @@ ifeq ($(strip $(AUDIO_FEATURE_ENABLED_FM_TUNER_EXT)),true)
     LOCAL_CFLAGS += -DFM_TUNER_EXT_ENABLED
 endif
 
+# TFA98XX feedback
+ifeq ($(strip $(AUDIO_FEATURE_ENABLED_X00T_TFA98XX)), true)
+LOCAL_CFLAGS += -DX00T_TFA98XX_ENABLED
+endif
+
 LOCAL_MODULE := audio.primary.$(TARGET_BOARD_PLATFORM)
 
 LOCAL_MODULE_RELATIVE_PATH := hw
diff --git a/hal/audio_hw.c b/hal/audio_hw.c
index 300107da6..6e4c28238 100644
--- a/hal/audio_hw.c
+++ b/hal/audio_hw.c
@@ -508,6 +508,21 @@ static unsigned int audio_device_ref_count;
 //cache last MBDRC cal step level
 static int last_known_cal_step = -1 ;
 
+#ifdef X00T_TFA98XX_ENABLED
+struct pcm *tfa98xx_out;
+
+struct pcm_config pcm_config_tfa98xx = {
+    .channels = 2,
+    .rate = 48000,
+    .period_size = 256,
+    .period_count = 4,
+    .format = PCM_FORMAT_S16_LE,
+    .start_threshold = 0,
+    .stop_threshold = INT_MAX,
+    .silence_threshold = 0,
+};
+#endif
+
 static int check_a2dp_restore_l(struct audio_device *adev, struct stream_out *out, bool restore);
 static int out_set_compr_volume(struct audio_stream_out *stream, float left, float right);
 static int out_set_mmap_volume(struct audio_stream_out *stream, float left, float right);
@@ -1337,6 +1352,10 @@ int enable_snd_device(struct audio_device *adev,
         amplifier_enable_devices(snd_device, true);
         audio_route_apply_and_update_path(adev->audio_route, device_name);
 
+#ifdef X00T_TFA98XX_ENABLED
+        tfa98xx_start_feedback(adev, snd_device);
+#endif
+
         if (SND_DEVICE_OUT_HEADPHONES == snd_device &&
             !adev->native_playback_enabled &&
             audio_is_true_native_stream_active(adev)) {
@@ -1359,6 +1378,122 @@ err:
     return -EINVAL;;
 }
 
+#ifdef X00T_TFA98XX_ENABLED
+bool isRightMode(snd_device_t snd_device)
+{
+    ALOGD("%s: snd_device is %d", __func__, snd_device);
+    switch(snd_device) {
+    case SND_DEVICE_OUT_SPEAKER:
+    case SND_DEVICE_OUT_SPEAKER_REVERSE:
+    case SND_DEVICE_OUT_SPEAKER_AND_HEADPHONES:
+    case SND_DEVICE_OUT_SPEAKER_AND_LINE:
+    case SND_DEVICE_OUT_VOICE_SPEAKER:
+    case SND_DEVICE_OUT_VOICE_SPEAKER_2:
+    case SND_DEVICE_OUT_SPEAKER_AND_HDMI:
+    case SND_DEVICE_OUT_SPEAKER_AND_USB_HEADSET:
+    case SND_DEVICE_OUT_SPEAKER_AND_ANC_HEADSET:
+        return true;
+    default:
+        return false;
+    }
+}
+
+int tfa98xx_start_feedback(struct audio_device *adev, snd_device_t snd_device)
+{
+    struct audio_usecase *uc_info_rx = NULL;
+    int rx_device_id;
+    int res, ret_val;
+
+    if (isRightMode(snd_device) == 0)
+        return 0;
+    ALOGD("%s: isRightMode: true", __func__);
+
+    if (adev == NULL) {
+        ALOGE("%s: Invalid params", __func__);
+        return -EINVAL;
+    }
+
+    if (tfa98xx_out != NULL)
+        return 0;
+
+    uc_info_rx = (struct audio_usecase *)calloc(1, sizeof(struct audio_usecase));
+    if (uc_info_rx == NULL)
+        return -ENOMEM;
+
+    uc_info_rx->id = USECASE_AUDIO_SPKR_CALIB_TX;
+    uc_info_rx->type = PCM_CAPTURE;
+    uc_info_rx->in_snd_device = SND_DEVICE_IN_CAPTURE_VI_FEEDBACK;
+
+    list_add_tail(&adev->usecase_list, &uc_info_rx->list);
+    enable_snd_device(adev, SND_DEVICE_IN_CAPTURE_VI_FEEDBACK);
+    enable_audio_route(adev, uc_info_rx);
+
+    rx_device_id = platform_get_pcm_device_id(uc_info_rx->id, 1);
+    if (rx_device_id < 0) {
+        ALOGE("%s: Invalid pcm device for usecase (%d)", __func__, uc_info_rx->id);
+        ret_val = -ENODEV;
+        goto error;
+    }
+    else {
+        tfa98xx_out = pcm_open(adev->snd_card, rx_device_id, PCM_IN, &pcm_config_tfa98xx);
+        if ((tfa98xx_out == NULL) || pcm_is_ready(tfa98xx_out)) {
+            res = pcm_start(tfa98xx_out);
+
+            if (res < 0) {
+                ALOGE("%s: pcm start for TX failed", __func__);
+                ret_val = -EBUSY;
+                goto error;
+            }
+            return 0;
+        }
+        else {
+            ALOGE("%s: %s", __func__, pcm_get_error(tfa98xx_out));
+            ret_val = -EIO;
+            goto error;
+        }
+    }
+
+error:
+    ALOGE("%s: error case...", __func__);
+    if (tfa98xx_out != 0)
+        pcm_close(tfa98xx_out);
+    tfa98xx_out = NULL;
+    disable_snd_device(adev, SND_DEVICE_IN_CAPTURE_VI_FEEDBACK);
+    list_remove(&uc_info_rx->list);
+    uc_info_rx->id = USECASE_AUDIO_SPKR_CALIB_TX;
+    uc_info_rx->type = PCM_PLAYBACK;
+    uc_info_rx->in_snd_device = SND_DEVICE_IN_CAPTURE_VI_FEEDBACK;
+    disable_audio_route(adev, uc_info_rx);
+    free(uc_info_rx);
+
+    return ret_val;
+}
+
+
+void tfa98xx_stop_feedback(struct audio_device *adev, snd_device_t snd_device)
+{
+    struct audio_usecase *usecase;
+
+    if (isRightMode(snd_device))
+    {
+        usecase = get_usecase_from_list(adev, USECASE_AUDIO_SPKR_CALIB_TX);
+        if (tfa98xx_out)
+        {
+            pcm_close(tfa98xx_out);
+        }
+        tfa98xx_out = NULL;
+
+        disable_snd_device(adev, SND_DEVICE_IN_CAPTURE_VI_FEEDBACK);
+        if (usecase)
+        {
+            list_remove(&usecase->list);
+            disable_audio_route(adev, usecase);
+            free(usecase);
+        }
+    }
+}
+#endif
+
 int disable_snd_device(struct audio_device *adev,
                        snd_device_t snd_device)
 {
@@ -1406,6 +1541,9 @@ int disable_snd_device(struct audio_device *adev,
             }
             platform_set_speaker_gain_in_combo(adev, snd_device, false);
         } else {
+#ifdef X00T_TFA98XX_ENABLED
+            tfa98xx_stop_feedback(adev, snd_device);
+#endif
             audio_route_reset_and_update_path(adev->audio_route, device_name);
             amplifier_enable_devices(snd_device, false);
         }
diff --git a/hal/audio_hw.h b/hal/audio_hw.h
index 33ee4772b..8cb968555 100644
--- a/hal/audio_hw.h
+++ b/hal/audio_hw.h
@@ -768,4 +768,8 @@ static inline bool is_loopback_input_device(audio_devices_t device) {
  * stream_in or stream_out mutex first, followed by the audio_device mutex.
  */
 
+#ifdef X00T_TFA98XX_ENABLED
+int tfa98xx_start_feedback(struct audio_device *adev, snd_device_t snd_device);
+#endif
+
 #endif // QCOM_AUDIO_HW_H
-- 
2.30.0

